environments:
  - name: default
    path: "./env.yaml" # NOTE: relative path to environment
    variables:
      region: <region>
      account_id: <account_id>
name: service-flyte
modules:
  - name: postgres
    type: aws-postgres
  - name: s3
    type: aws-s3
    bucket_name: "{parent_name}-{layer_name}"
  - name: adminflyterole
    type: aws-iam-role
    extra_iam_policies:
      - "arn:aws:iam::aws:policy/CloudWatchEventsFullAccess"
    #      - "arn:aws:iam::{vars.account_id}:policy/{env}-{env}-awsses-sender" # Uncomment out for SES
    allowed_k8s_services:
      - namespace: "*"
        service_name: "*"
    links:
      - s3: ["write"]
  - name: userflyterole
    type: aws-iam-role
    extra_iam_policies:
      - "arn:aws:iam::aws:policy/CloudWatchEventsFullAccess"
    #      - "arn:aws:iam::{vars.account_id}:policy/{env}-{env}-awsses-sender" # Uncomment out for SESre, change the templating
    allowed_k8s_services:
      - namespace: "*"
        service_name: "*"
    links:
      - s3: ["write"]
  - type: helm-chart
    chart: "../../charts/flyte-core" # NOTE: relative path to chart
    namespace: flyte
    timeout: 600
    create_namespace: true
    values_file: "../../charts/flyte-core/values-eks.yaml" # NOTE: relative path to values yaml
    # Additional overrides to the values provided by the chart. Opta enables piping through produced outputs from prior modules/steps.
    values:
      db:
        datacatalog:
          database:
            port: 5432
            username: "${{module.postgres.db_user}}"
            host: "${{module.postgres.db_host}}"
            dbname: "${{module.postgres.db_name}}"
        admin:
          database:
            port: 5432
            username: "${{module.postgres.db_user}}"
            host: "${{module.postgres.db_host}}"
            dbname: "${{module.postgres.db_name}}"
      common:
        ingress:
          albSSLRedirect: false
          host: "{parent.domain}"
          annotations:
            kubernetes.io/ingress.class: "nginx"
            nginx.ingress.kubernetes.io/app-root: /console
        databaseSecret:
          secretManifest:
            stringData:
              pass.txt: "${{module.postgres.db_password}}"
      storage:
        bucketName: "{parent_name}-{layer_name}"
        s3:
          region: "{vars.region}"
      flyteadmin:
        serviceAccount:
          create: true
          annotations:
            eks.amazonaws.com/role-arn: "${{module.adminflyterole.role_arn}}"
      datacatalog:
        serviceAccount:
          create: true
          annotations:
            eks.amazonaws.com/role-arn: "${{module.adminflyterole.role_arn}}"
      flytepropeller:
        serviceAccount:
          create: true
          annotations:
            eks.amazonaws.com/role-arn: "${{module.adminflyterole.role_arn}}"
      flytescheduler:
        serviceAccount:
          create: true
          annotations:
            "eks.amazonaws.com/role-arn": "${{module.adminflyterole.role_arn}}"
      workflow_scheduler:
        enabled: true
      workflow_notifications:
        enabled: false
      configmap:
        remoteData:
          remoteData:
            region: "{vars.region}"
            scheme: aws
            signedUrls:
              durationMinutes: 3
        task_logs:
          plugins:
            logs:
              cloudwatch-region: "{vars.region}"
        core:
          propeller:
            rawoutput-prefix: "s3://{parent_name}-{layer_name}"
      cluster_resource_manager:
        enabled: true
        config:
          cluster_resources:
            customData:
              - production:
                  - defaultIamRole:
                      value: "${{module.userflyterole.role_arn}}"
                  - projectQuotaCpu:
                      value: "6"
                  - projectQuotaMemory:
                      value: "6000Mi"
              - staging:
                  - defaultIamRole:
                      value: "${{module.userflyterole.role_arn}}"
                  - projectQuotaCpu:
                      value: "6"
                  - projectQuotaMemory:
                      value: "6000Mi"
              - development:
                  - defaultIamRole:
                      value: "${{module.userflyterole.role_arn}}"
                  - projectQuotaCpu:
                      value: "6"
                  - projectQuotaMemory:
                      value: "6000Mi"
